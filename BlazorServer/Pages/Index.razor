@page "/"
@using System.Diagnostics

<FileUpload @ref=@Instance FilesChanged="@OnFilesChanged" Multiple="true" Validation="@Validation" FileValidation="@FileValidation" IncludeButton="true">

</FileUpload>



@code {
    private FileUpload Instance;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

    }

    private List<string> Validation(IReadOnlyList<FrontEndFile> files)
    {
        return new List<string>()
        {
            "This is an error"
        };
    }
    private List<string> FileValidation(FrontEndFile file)
    {
        return new List<string>()
        {
            "This is an error",
            "asdfThis is an error",
            "This is anasdf earror",
        };
    }

    private async Task OnFilesChanged(IEnumerable<FrontEndFile> files){
        if (!files.Any())
        {
            return;
        }
        var file = files.First();
        var filePath = "C:\\Users\\Jaron\\Desktop\\test\\TEST__" + file.FileName;
        if (File.Exists(filePath))
        {
            File.Delete(filePath);
        }
        //var contents = await file.GetAllContents();
        //await File.WriteAllBytesAsync(filePath, contents);

        // using var fileStream = File.Create(filePath);
        // using var downloadStream = file.CreateStream();
        // await downloadStream.CopyToAsync(fileStream);
        // fileStream.Close();
    }
}